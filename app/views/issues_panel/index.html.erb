<% @issues_panel.view = self %>

<%= stylesheet_link_tag "redmine_issues_panel", plugin: "redmine_issues_panel" %>

<div class="contextual">
  <% if User.current.allowed_to?(:add_issues, @project, :global => true) && (@project.nil? || Issue.allowed_target_trackers(@project).any?) %>
    <%= link_to l(:label_issue_new), _new_project_issue_path(@project, {:params => { :back_url => _project_issues_panel_path(@project) } }), :class => 'icon icon-add new-issue' %>
  <% end %>
</div>

<h2><%= @query.new_record? ? l(:label_issues_panel_plural) : @query.name %></h2>
<% html_title(@query.new_record? ? l(:label_issues_panel_plural) : @query.name) %>

<%= form_tag(_project_issues_panel_path(@project), :method => :get, :id => 'query_form') do %>
  <%= render :partial => 'issues_panel/query_form' %>
<% end %>

<% if @query.valid? %>
  <% if @issues_panel.truncated %>
    <p class="warning"><%= l(:notice_issues_panel_truncated, :max => @issues_panel.issues_limit) %></p>
  <% end %>
  <%= form_tag({}, :data => {:cm_url => issues_context_menu_path}) do %>
    <%= hidden_field_tag('back_url', url_for(:params => request.query_parameters), :id => nil) %>
    <div class="autoscroll">
      <%= @issues_panel.render_issues_panel %>
    </div>
  <% end %>
<% end %>

<% content_for :sidebar do %>
  <%= render :partial => 'issues/sidebar' %>
<% end %>

<%= context_menu %>

<div id="new-issue-card-modal" style="display:none;"></div>

<%= javascript_tag do %>
function loadDraggableSettings() {
  $(".issue-card").each(function() {
    var id = '#' + $(this).attr('id');
    var movable_area = $(id).parent('td').attr('data-movable-area');
    $(id).draggable({
      containment: movable_area,
      snap: ".issue-card-receiver",
      snapMode: "inner",
      revert: function(ui) {
        if (ui==false) { return true };
        // revert if card does not drop int the droppable area.
        if (ui.hasClass('issue-card-receiver')==false) { return true };
        if ($(this).hasClass('drag-revert')) {
          $(this).removeClass('drag-revert');
          return true;
        }
      },
      opacity: 0.9,
      zIndex: 10,
      start: function() { $(this).css({ transform: 'rotate(10deg)', zIndex: 10 }); },
      drag: function() { $('.hascontextmenu').removeClass('context-menu-selection cm-last');contextMenuHide(); },
      stop: function() { $(this).css({ transform: 'rotate(0deg)', zIndex: 10 }); }
    });
  });
}
function loadDroppableSetting() {
  $(".issue-card-receiver").droppable({
    accept: ".issue-card",
    hoverClass: 'ui-droppable-hover',
    drop: function(event, ui) {
      if (ui.draggable.length > 0) {
        var org_status_id = ui.draggable.attr('data-status-id');
        var org_group_value = ui.draggable.attr('data-group-value');
        var new_status_id = $(this).attr('data-status-id');
        var new_group_value = $(this).attr('data-group-value');
        // revert if there is no change in status or group
        if (org_status_id==new_status_id &&
            (typeof(new_group_value) === "undefiend" || org_group_value==new_group_value)) {
          return $(ui.draggable).addClass('drag-revert');
        } else {
          $.ajax({
            url: '<%= move_issue_card_path(:format => 'js') %>',
            type: 'put',
            data: {
              'id': ui.draggable.attr('data-issue-id'),
              <%= @project ? ("'project_id': #{@project.id},").html_safe : '' %>
              'status_id': $(this).attr('data-status-id'),
              'group_key': $(this).attr('data-group-key'),
              'group_value': $(this).attr('data-group-value')
            }
          });
        }
      }
    }
  });
}
$(document).ready(function(){
  $('.link-issue').dblclick(function() {
    var issue_id = $(this).attr('data-issue-id');
    window.location.href='<%= issues_path %>/' + issue_id;
  });
  $('.add-issue-card').click(function(e) {
    e.preventDefault();
    $.ajax({
      dataType: "jsonp",
      url: $(this).data('url'),
      timeout: 10000,
      beforeSend: function(){
        $('#ajax-indicator').show();
      },
      success: function(data){
        $('#ajax-indicator').hide();
      },
      error: function(){
        $('#ajax-indicator').hide();
      }
    });
  });
  loadDraggableSettings();
  loadDroppableSetting();
});
<% end %>
